name: IG build entry workflow

env:
  IG_ROOT: "fw-ig/starter-r4"
  DOCKER_PUBLISHER_TAG: latest
  PUBLISHER_ARGS: "-ig /ig/ig.ini"
  IO_OWNER: [a github user here]
  IO_REPO: [a github repo with the branch listed below]
  IO_BRANCH: gh-pages
  IO_PATH_PREFIX: ''

defaults:
  run:
    shell: bash

concurrency:
  group: ig-build

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, master ]
    paths:
      - fw-ig/starter-r4/**
  pull_request_target:
    paths:
      - fw-ig/starter-r4/**

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # Do any setup needed to create job output parameters needed to the later build job
  vars:
    name: Build vars
    runs-on: ubuntu-latest
    outputs:
      owner-repo: ${{ steps.vars.outputs.owner-repo }}
      ref: ${{ steps.vars.outputs.ref }}
      try-merge: ${{ steps.vars.outputs.try-merge }}
      base-ref: ${{ steps.vars.outputs.base-ref }}
      pr-number: ${{ steps.vars.outputs.pr-number }}
      ig-root: ${{ steps.vars.outputs.ig-root }}
      publisher-args: ${{ steps.vars.outputs.publisher-args }}
      docker-publisher-tag: ${{ steps.vars.outputs.docker-publisher-tag }}
      io-owner: ${{ steps.vars.outputs.io-owner }}
      io-repo: ${{ steps.vars.outputs.io-repo }}
      io-branch: ${{ steps.vars.outputs.io-branch }}
      io-path: ${{ steps.vars.outputs.io-path }}

    steps:
      - id: vars
        run: |

          if [ "${{ github.event_name }}" = "push" ]; then
            echo "::set-output name=owner-repo::${{ github.repository }}"
            echo "::set-output name=ref::${{ github.ref_name }}"
            echo "::set-output name=try-merge::false"
            echo "::set-output name=base-ref::"
            echo "::set-output name=pr-number::1"
            echo "::set-output name=ig-root::${{ env.IG_ROOT }}"
            echo "::set-output name=publisher-args::${{ env.PUBLISHER_ARGS }}"
            echo "::set-output name=docker-publisher-tag::${{ env.DOCKER_PUBLISHER_TAG }}"
            echo "::set-output name=io-owner::${{ env.IO_OWNER }}"
            echo "::set-output name=io-repo::${{ env.IO_REPO }}"
            echo "::set-output name=io-branch::${{ env.IO_BRANCH }}"
            echo "::set-output name=io-path::${{ env.IO_PATH_PREFIX }}${{ env.IG_ROOT }}/branch/${{ github.ref_name }}"

          elif [ "${{ github.event_name }}" = "pull_request_target" ]; then
            echo "::set-output name=owner-repo::${{ github.event.pull_request.head.repo.full_name }}"
            echo "::set-output name=ref::${{ github.event.pull_request.head.ref }}"
            echo "::set-output name=try-merge::true"
            echo "::set-output name=base-ref::${{ github.event.pull_request.base.ref }}"
            echo "::set-output name=pr-number::${{ github.event.number }}"
            echo "::set-output name=ig-root::${{ env.IG_ROOT }}"
            echo "::set-output name=publisher-args::${{ env.PUBLISHER_ARGS }}"
            echo "::set-output name=docker-publisher-tag::${{ env.DOCKER_PUBLISHER_TAG }}"
            echo "::set-output name=io-owner::${{ env.IO_OWNER }}"
            echo "::set-output name=io-repo::${{ env.IO_REPO }}"
            echo "::set-output name=io-branch::${{ env.IO_BRANCH }}"
            echo "::set-output name=io-path::${{ env.IO_PATH_PREFIX }}${{ env.IG_ROOT }}/pr-${{ github.event.number }}/${{ github.event.pull_request.base.ref }}/FROM-${{ github.event.pull_request.head.repo.full_name }}/${{ github.event.pull_request.head.ref }}"

          else
           echo EXITING DUE TO UNKNOWN EVENT NAME.
           exit 1
          fi

  build:
    needs: vars
    uses: ./.github/workflows/ig-build.yml
    secrets:
      output-token: ${{ secrets.PUBLISHER_IO }}
    with:
      owner-repo: ${{ needs.vars.outputs.owner-repo }}
      ref: ${{ needs.vars.outputs.ref }}

      ig-root: ${{ needs.vars.outputs.ig-root }}
      publisher-args: ${{ needs.vars.outputs.publisher-args }}
      docker-publisher-tag: ${{ needs.vars.outputs.docker-publisher-tag }}
      base-ref: ${{ needs.vars.outputs.base-ref }}

      io-owner: ${{ needs.vars.outputs.io-owner }}
      io-repo: ${{ needs.vars.outputs.io-repo }}
      io-branch: ${{ needs.vars.outputs.io-branch }}
      io-path: ${{ needs.vars.outputs.io-path }}
